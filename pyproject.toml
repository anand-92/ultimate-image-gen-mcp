[project]
name = "ultimate-gemini-mcp"
version = "1.0.12"
description = "Ultimate image generation MCP server unifying Gemini 2.5 Flash Image and Imagen 4/Fast/Ultra with advanced features"
readme = "README.md"
requires-python = ">=3.11"
keywords = [ "mcp", "gemini", "imagen", "image-generation", "ai", "google-ai", "fastmcp", "claude",]
classifiers = [ "Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Scientific/Engineering :: Artificial Intelligence",]
dependencies = [ "fastmcp>=2.11.0", "google-genai>=0.3.0", "pillow>=10.4.0", "pydantic>=2.0.0", "pydantic-settings>=2.0.0", "aiohttp>=3.9.0", "httpx>=0.27.0",]
[[project.authors]]
name = "Ultimate Gemini MCP"
email = "noreply@example.com"

[build-system]
requires = [ "hatchling",]
build-backend = "hatchling.build"

[project.license]
text = "MIT"

[project.urls]
Homepage = "https://github.com/anand-92/ultimate-image-gen-mcp"
Repository = "https://github.com/anand-92/ultimate-image-gen-mcp"
Issues = "https://github.com/anand-92/ultimate-image-gen-mcp/issues"
Documentation = "https://github.com/anand-92/ultimate-image-gen-mcp/blob/main/README.md"

[project.optional-dependencies]
dev = [ "ruff>=0.8.0", "mypy>=1.8.0", "pytest>=8.0.0", "pytest-asyncio>=0.24.0", "pytest-cov>=6.0.0",]

[project.scripts]
ultimate-gemini-mcp = "src.server:main"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.ruff.lint]
select = [ "E", "W", "F", "I", "N", "UP", "B",]
ignore = [ "E501",]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = [ "tests",]
markers = [ "unit: Unit tests", "integration: Integration tests", "network: Tests requiring network access",]

[tool.hatch.build.targets.wheel]
packages = [ "src",]
